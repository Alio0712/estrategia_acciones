#==============================================================================
#           Código compartido entre Juan Pablo Pisano (@JohnGalt_is_www)
#                           y Camilo Cisera
#==============================================================================

import pandas as pd, numpy as np
import yfinance as yf
import matplotlib.pyplot as plt

tickers = ["GGAL", "BMA", "YPF", "TGS", "CRESY", "IRS", "TEO", "MELI", "EDN", "BBAR", "TX"]
data =  yf.download(tickers, period="max")['Adj Close']
data.dropna(inplace=True)
yields = data.pct_change()

pearson = yields.groupby([yields.index.year,yields.index.month]).corr()
covarianzas = yields.groupby([yields.index.year,yields.index.month]).cov()*100
rendimientos = yields.groupby([yields.index.year,yields.index.month]).mean()*100

años = list(yields.index.year.unique())
idx = pd.MultiIndex.from_product( [años, list(range(1,13)) ])
dfCov = pd.DataFrame(np.nan, idx, ['Media'])
dfPearson = pd.DataFrame(np.nan, idx, ['Media'])
dfYields = pd.DataFrame(np.nan, idx, ['Media'])

for año in años:
    for mes in range(1,13):
        try:
            dfCov.loc[año,mes]['Media'] = round(covarianzas.loc[año,mes].mean().mean(),2)
            dfPearson.loc[año,mes]['Media'] = round(pearson.loc[año,mes].mean().mean(),2)
            dfYields.loc[año,mes]['Media'] = round(rendimientos.loc[año,mes].mean(),2)
        except:
            pass

df = pd.concat([dfCov,dfPearson,dfYields], axis=1).dropna()
df.columns = ['Covarianzas','Pearson','Yield']
df['Percentil Yield ABS']  = df.Yield.abs().rank(pct=True).round(2)*100

top10_Pearson = df.sort_values('Pearson', ascending=False).head(10)
top10_Covarianzas = df.sort_values('Covarianzas', ascending=False).head(10)

print(top10_Pearson, '\n', top10_Pearson.mean())
print(top10_Covarianzas, '\n', top10_Covarianzas.mean())
